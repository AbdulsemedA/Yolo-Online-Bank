/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banking.system;

import java.sql.*;
import javax.swing.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


/**
 *
 * @author dell
 */
public class billpayment extends javax.swing.JFrame {

    /**
     * Creates new form BillPayment
     */
	String accountNum="";
	String profile = "";
    public billpayment(String acc,String pp) {
    	accountNum=acc;
    	profile = pp;
        initComponents();
        currentdateTime();
    }
    
    public String currentdateTime(){
        
        
        DateTimeFormatter dtf=DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();
            return  dtf.format(now);
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        payment_bodyPanel = new javax.swing.JPanel();
        payment_headerPanel = new javax.swing.JPanel();
        pay_billsLabel = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        bill_nameLabel = new javax.swing.JLabel();
        billernameField = new javax.swing.JTextField();
        select_bnComboBox = new javax.swing.JComboBox<>();
        payFromLabel = new javax.swing.JLabel();
        payfromField = new javax.swing.JTextField();
        amountLabel = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        payBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        datetime = new javax.swing.JLabel();
        view_limitBtn = new javax.swing.JButton();
        minLabel = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        max = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        view_accountBtn = new javax.swing.JButton();
        accBalanceLabel = new javax.swing.JLabel();
        ETBLabel = new javax.swing.JLabel();
        acbalance = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        payment_bodyPanel.setBackground(new java.awt.Color(156, 189, 238));

        payment_headerPanel.setBackground(new java.awt.Color(70, 100, 168));

        pay_billsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pay_billsLabel.setForeground(new java.awt.Color(232, 232, 232));
        pay_billsLabel.setText("PAY BILLS");

        javax.swing.GroupLayout payment_headerPanelLayout = new javax.swing.GroupLayout(payment_headerPanel);
        payment_headerPanel.setLayout(payment_headerPanelLayout);
        payment_headerPanelLayout.setHorizontalGroup(
            payment_headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payment_headerPanelLayout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(pay_billsLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        payment_headerPanelLayout.setVerticalGroup(
            payment_headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payment_headerPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(pay_billsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        backLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        backLabel.setForeground(new java.awt.Color(255, 51, 0));
        backLabel.setText(" BACK");
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
        });

        bill_nameLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bill_nameLabel.setForeground(new java.awt.Color(46, 52, 76));
        bill_nameLabel.setText("Biller Name");

        select_bnComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "Electricity", "Gas ", "Water", "Internet", "KMC" }));
        select_bnComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_bnComboBoxActionPerformed(evt);
            }
        });

        payFromLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        payFromLabel.setForeground(new java.awt.Color(46, 52, 76));
        payFromLabel.setText("PAY From");

        amountLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        amountLabel.setForeground(new java.awt.Color(46, 52, 76));
        amountLabel.setText("AMOUNT");

        payBtn.setBackground(new java.awt.Color(13, 47, 134));
        payBtn.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        payBtn.setForeground(new java.awt.Color(253, 253, 253));
        payBtn.setText("PAY");
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(13, 47, 134));
        cancelBtn.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(253, 253, 253));
        cancelBtn.setText("CANCEL");

//        datetime.setText("Date");
        datetime.setText(currentdateTime());

        view_limitBtn.setBackground(new java.awt.Color(55, 113, 224));
        view_limitBtn.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        view_limitBtn.setForeground(new java.awt.Color(249, 249, 249));
        view_limitBtn.setText("VIEW LIMITS");
        view_limitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_limitBtnMouseClicked(evt);
            }
        });
        
        payfromField.setText(accountNum);

        minLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        minLabel.setText("MIN");

        min.setText("0000");

        max.setText("0000");

        maxLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        maxLabel.setText("MAX");

        view_accountBtn.setBackground(new java.awt.Color(55, 113, 224));
        view_accountBtn.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        view_accountBtn.setForeground(new java.awt.Color(249, 249, 249));
        view_accountBtn.setText("VIEW ACCOUNT BALANCE");
        view_accountBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_accountBtnMouseClicked(evt);
            }
        });
        view_accountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_accountBtnActionPerformed(evt);
            }
        });

        accBalanceLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        accBalanceLabel.setText("Your Account Balance is");

        ETBLabel.setText("ETB  =");

        acbalance.setText("0000");

        javax.swing.GroupLayout payment_bodyPanelLayout = new javax.swing.GroupLayout(payment_bodyPanel);
        payment_bodyPanel.setLayout(payment_bodyPanelLayout);
        payment_bodyPanelLayout.setHorizontalGroup(
            payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(payment_headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(datetime)
                .addGap(159, 159, 159))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payment_bodyPanelLayout.createSequentialGroup()
                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(amountLabel)
                                    .addComponent(payFromLabel))
                                .addGap(32, 32, 32)
                                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                                        .addComponent(payBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cancelBtn))
                                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(view_accountBtn))
                            .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                                .addComponent(bill_nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(billernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(payfromField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(select_bnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(139, 139, 139)
                                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(minLabel)
                                            .addComponent(maxLabel))
                                        .addGap(51, 51, 51)
                                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(max)
                                            .addComponent(min)))
                                    .addComponent(view_limitBtn)))))
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(accBalanceLabel)
                        .addGap(44, 44, 44)
                        .addComponent(ETBLabel)))
                .addGap(27, 27, 27)
                .addComponent(acbalance, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        payment_bodyPanelLayout.setVerticalGroup(
            payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addComponent(payment_headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backLabel))
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(datetime)))
                .addGap(18, 18, 18)
                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bill_nameLabel)
                            .addComponent(billernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select_bnComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(payFromLabel)
                            .addComponent(payfromField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addComponent(view_limitBtn)
                        .addGap(16, 16, 16)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minLabel)
                            .addComponent(min))
                        .addGap(18, 18, 18)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxLabel)
                            .addComponent(max))))
                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payment_bodyPanelLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountLabel)
                            .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(payBtn)
                            .addComponent(cancelBtn))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payment_bodyPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(view_accountBtn)
                        .addGap(18, 18, 18)))
                .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accBalanceLabel)
                    .addGroup(payment_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ETBLabel)
                        .addComponent(acbalance)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(payment_bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(payment_bodyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void select_bnComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_bnComboBoxMouseClicked
        // TODO add your handling code here:
        String selectedValue= select_bnComboBox.getSelectedItem().toString();
        billernameField.setText(selectedValue);
        
    }//GEN-LAST:event_select_bnComboBoxMouseClicked

    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBtnActionPerformed
        // TODO add your handling code here:
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn= DriverManager.getConnection("jdbc:mysql://192.168.43.86:3306/banking_system","client","cl@#12_nt");
        String amnt=amountField.getText();
        int amntInt= Integer.parseInt(amnt);
        String billerName=billernameField.getText();
        
        //To get the data in jTextfield from Mysql
        String sql ="Select accountbalance from account where accountnumber ="+accountNum+"";
        PreparedStatement ptst =conn.prepareStatement(sql);
        ResultSet rs=ptst.executeQuery(sql);
        if(rs.next()){
        acbalance.setText(rs.getString("accountbalance"));
        String accbalance= rs.getString("accountbalance");
        int accbalanceInt= Integer.parseInt(accbalance);
        
        if(amntInt<=50000 && amntInt>0) {
//        	 if (accbalanceInt >= amntInt ){
//             	
//                 int leftover=accbalanceInt-amntInt;
//                 
//                 String sql1 ="Update account SET accountbalance = "+leftover+ " where accountnumber ="+accountNum+"";
//                 PreparedStatement ptmt= conn.prepareStatement(sql1);
//                 ptmt.execute();
//                 
//                 String sql2= "insert into paybills values(?,?,?)";
//                 PreparedStatement pts= conn.prepareStatement(sql2);
//                 pts.setString(1, billernameField.getText());
//                 pts.setString(2, amountField.getText());
//                 pts.setString(3, datetime.getText());
//                 pts.executeUpdate();
//                 JOptionPane.showMessageDialog(null, "Your "+billerName+" bill of amount "+amnt+" has been paid.");
//                 
//             }        
//             else{
//                 JOptionPane.showMessageDialog(null, "Your account balance is low that is only "+accbalanceInt+" , kindly recharge the account. ");
//             }
//             
//        }else {
//        	JOptionPane.showMessageDialog(null, "The amount to pay must be in the limit.");
//        }
//       
//        }
//        else{
//           
//            acbalance.setText("");
//        }
//        }catch(Exception e){
//           JOptionPane.showMessageDialog(null, "Error while establishing the connection");
//        }
        	if (accbalanceInt >= amntInt ){
             	
                int leftover=accbalanceInt-amntInt;
                
                String sql1 ="Update account SET accountbalance = "+leftover+ " where accountnumber ="+accountNum+"";
                PreparedStatement ptmt= conn.prepareStatement(sql1);
                ptmt.execute();
                
                
                
               String transql ="insert into transaction (Account_num,Amount,Status,To_Or_From_Acc,Reason,Date) values(?,?,?,?,?,?)";
               PreparedStatement transacstmt = conn.prepareStatement(transql);
           
               transacstmt.setString(1, accountNum);
               transacstmt.setInt(2, amntInt);
               transacstmt.setString(3, "Debit");
               transacstmt.setString(4, "Service");
               transacstmt.setString(5, billerName+" Bill");
               transacstmt.setString(6, currentdateTime());
               
               transacstmt.executeUpdate();
               
               String transqlRc ="insert into transaction (Account_num,Amount,Status,To_Or_From_Acc,Reason,Date) values(?,?,?,?,?,?)";
               PreparedStatement transacstmtRc = conn.prepareStatement(transqlRc);
           
               transacstmtRc.setString(1, "SP Acc");
               transacstmtRc.setInt(2, amntInt);
               transacstmtRc.setString(3, "Credit");
               transacstmtRc.setString(4, accountNum);
               transacstmtRc.setString(5, billerName+" Payment");
               transacstmtRc.setString(6, currentdateTime());
               
               transacstmtRc.executeUpdate();
           
           
                JOptionPane.showMessageDialog(null, "Your "+billerName+" bill of amount "+amnt+" has been paid.");
                
            }        
            else{
                JOptionPane.showMessageDialog(null, "Your account balance is low that is only "+accbalanceInt+" , kindly recharge the account. ");
            }
            
       }else {
       	JOptionPane.showMessageDialog(null, "The amount to pay must be in the limit.");
       }
      
       }
       else{
          
           acbalance.setText("");
       }
       }catch(Exception e){
          JOptionPane.showMessageDialog(null, "Error while establishing the connection");
       }

        
    }//GEN-LAST:event_payBtnActionPerformed

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        // TODO add your handling code here:
        
        Dashboard obj =new Dashboard(accountNum,profile);
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_backLabelMouseClicked

    private void view_limitBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_limitBtnMouseClicked
        // TODO add your handling code here:
        min.setText("ETB= 01");
        max.setText("ETB= 50,000");
    }//GEN-LAST:event_view_limitBtnMouseClicked

    private void view_accountBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_accountBtnMouseClicked
        // TODO add your handling code here:
        try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn= DriverManager.getConnection("jdbc:mysql://192.168.43.86:3306/banking_system","client","cl@#12_nt");
        
        //To get data from Mysql in jTextfield
        String sql ="Select accountbalance from account where accountnumber ="+accountNum+"";
        PreparedStatement ptst= conn.prepareStatement(sql);
        ResultSet rs =ptst.executeQuery(sql);
        
        if(rs.next()){
        acbalance.setText(rs.getString("accountbalance"));
        }
        else{
        acbalance.setText("");
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }                  
//GEN-LAST:event_view_accountBtnMouseClicked

    private void view_accountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_accountBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_view_accountBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(billpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(billpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(billpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(billpayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BillPayment(accountNum).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ETBLabel;
    private javax.swing.JLabel acbalance;
    private javax.swing.JLabel accBalanceLabel;
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JLabel backLabel;
    private javax.swing.JLabel bill_nameLabel;
    private javax.swing.JTextField billernameField;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel datetime;
    private javax.swing.JLabel max;
    private javax.swing.JLabel maxLabel;
    private javax.swing.JLabel min;
    private javax.swing.JLabel minLabel;
    private javax.swing.JButton payBtn;
    private javax.swing.JLabel payFromLabel;
    private javax.swing.JLabel pay_billsLabel;
    private javax.swing.JTextField payfromField;
    private javax.swing.JPanel payment_bodyPanel;
    private javax.swing.JPanel payment_headerPanel;
    private javax.swing.JComboBox<String> select_bnComboBox;
    private javax.swing.JButton view_accountBtn;
    private javax.swing.JButton view_limitBtn;
    // End of variables declaration//GEN-END:variables
}